{"version":3,"file":"static/js/232.6dbb4abd.chunk.js","mappings":"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","sources":["api/api.js","components/MovieList/MovieList.jsx","components/MovieSearchForm/MovieSearchForm.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '26362fc59abb5f3a891dc2f9c6943e3e';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNGFjNzI1MTA4Mjc2ZDkyM2RlMjQzOTE4NzUwNjJjNSIsInN1YiI6IjY1YjUwMjhhNGYzM2FkMDE3YTBiYTM1MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DVikyztACIvDZrPSWL56RBOBtNnjH3jDZKwNSqkZN54',\n  },\n};\n\nexport const getMoviesDetails = id => {\n  return instance.get(\n    `/movie/${id}?language=en-US&api_key=${API_KEY}`,\n    options\n  );\n};\n\nexport const getMoviesCredits = id => {\n  return instance.get(\n    `/movie/${id}/credits?language=en-US&api_key=${API_KEY}`,\n    options\n  );\n};\n\nexport const getMoviesReviews = id => {\n  return instance.get(\n    `/movie/${id}/reviews?language=en-US&api_key=${API_KEY}`,\n    options\n  );\n};\n\nexport const searchMovies = (q, page = 1) => {\n  return instance.get(\n    `/search/movie?query=${q}&include_adult=false&language=en-US&page=${page}&api_key=${API_KEY}`,\n    options\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  const elements = items.map(({ id, title }) => (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div>\n      <ul>{elements}</ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import { useState, useEffect, useRef } from 'react';\n\nconst MoviesSearchForm = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    search: '',\n  });\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({\n      search: '',\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <div>\n          <input\n            ref={inputRef}\n            value={state.search}\n            onChange={handleChange}\n            required\n            type=\"text\"\n            name=\"search\"\n            placeholder=\"Enter search phrase\"\n          />\n          <button type=\"submit\">\n            <span>Search</span>\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default MoviesSearchForm;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport MoviesSearchForm from 'components/MovieSearchForm/MovieSearchForm';\nimport MoviesList from 'components/MovieList/MovieList';\n\nimport { searchMovies } from '../../api/api';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const search = searchParams.get('search');\n  const page = searchParams.get('page');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const { data } = await searchMovies(search, page);\n        if (movies.length === 0) {\n          setMovies(data.results || []);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (search && (page === '1' || !page)) {\n      fetchMovies();\n    }\n  }, [search, page, movies]);\n\n  const handleSearch = ({ search }) => {\n    setSearchParams({ search, page: 1 });\n    setMovies([]);\n  };\n\n  const isMovies = Boolean(movies.length);\n\n  return (\n    <div>\n      <MoviesSearchForm onSubmit={handleSearch} />\n      {error && <p>{error}</p>}\n      {loading && <p>Loading...</p>}\n      {isMovies && <MoviesList items={movies} />}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["API_KEY","instance","axios","baseURL","options","method","headers","accept","Authorization","getMoviesDetails","id","get","concat","getMoviesCredits","getMoviesReviews","searchMovies","q","page","arguments","length","undefined","_ref","items","location","useLocation","elements","map","_ref2","title","_jsx","children","Link","to","state","from","onSubmit","_useState","useState","search","_useState2","_slicedToArray","setState","inputRef","useRef","useEffect","current","focus","reset","e","preventDefault","_objectSpread","_jsxs","ref","value","onChange","target","name","_defineProperty","required","type","placeholder","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$searchMovies","data","_context","prev","next","sent","results","t0","message","finish","stop","apply","isMovies","Boolean","MoviesSearchForm","MoviesList"],"sourceRoot":""}