{"version":3,"file":"static/js/442.ede21bdf.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","webpack://react-homework-template/./src/pages/MovieDetailsPage/movie-details.module.css?3d4a","pages/MovieDetailsPage/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '26362fc59abb5f3a891dc2f9c6943e3e';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNGFjNzI1MTA4Mjc2ZDkyM2RlMjQzOTE4NzUwNjJjNSIsInN1YiI6IjY1YjUwMjhhNGYzM2FkMDE3YTBiYTM1MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DVikyztACIvDZrPSWL56RBOBtNnjH3jDZKwNSqkZN54',\n  },\n};\n\nexport const getMoviesDetails = id => {\n  return instance.get(\n    `/movie/${id}?language=en-US&api_key=${API_KEY}`,\n    options\n  );\n};\n\nexport const getMoviesCredits = id => {\n  return instance.get(\n    `/movie/${id}/credits?language=en-US&api_key=${API_KEY}`,\n    options\n  );\n};\n\nexport const getMoviesReviews = id => {\n  return instance.get(\n    `/movie/${id}/reviews?language=en-US&api_key=${API_KEY}`,\n    options\n  );\n};\n\nexport const searchMovies = (q, page = 1) => {\n  return instance.get(\n    `/search/movie?query=${q}&include_adult=false&language=en-US&page=${page}&api_key=${API_KEY}`,\n    options\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castImg\":\"cast_castImg__bJ13n\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCredits } from '../../api/api';\nimport styles from './cast.module.css';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function fetchCast() {\n      try {\n        setLoading(true);\n        const { data } = await getMoviesCredits(id);\n        setCast(data.cast);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchCast();\n  }, [id]);\n\n  const isCast = Boolean(cast.length);\n\n  return (\n    <>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {!loading && isCast ? (\n        <ul>\n          {cast.map(({ id, character, original_name, profile_path }) => (\n            <li key={id}>\n              <img\n                className={styles.castImg}\n                src={BASE_URL + profile_path}\n                alt=\"Foto\"\n              />\n              <p>{original_name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>{!loading && \"We don't have any cast for this movie\"}</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import { getMoviesReviews } from '../../api/api';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nconst Reviews = () => {\n  const [review, setReview] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        setLoading(true);\n        const { data } = await getMoviesReviews(id);\n        setReview(data.results);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchReviews();\n  }, [id]);\n\n  const elements = review.map(({ id, author, content }) => (\n    <li key={id}>\n      <h4>{author}</h4>\n      <p>{content}</p>\n    </li>\n  ));\n\n  const isReview = Boolean(review.length);\n\n  return (\n    <>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {!loading && isReview ? (\n        <ul>{elements}</ul>\n      ) : (\n        <p>{!loading && \"We don't have any reviews for this movie\"}</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieContainer\":\"movie-details_movieContainer__JpEFt\",\"movieImg\":\"movie-details_movieImg__ORbhV\",\"descriptionContainer\":\"movie-details_descriptionContainer__yycpf\"};","import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { getMoviesDetails } from '../../api/api';\nimport Cast from '../../components/Cast/Cast';\nimport Reviews from '../../components/Reviews/Reviews';\n\nimport styles from './movie-details.module.css';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedComponent, setSelectedComponent] = useState(null);\n\n  const { id } = useParams();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n  const navigate = useNavigate();\n  const BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\n  useEffect(() => {\n    const fetchMoviesDetails = async () => {\n      try {\n        setLoading(true);\n        const { data } = await getMoviesDetails(id);\n        setMovie(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMoviesDetails();\n  }, [id]);\n\n  const goBack = () => navigate(from);\n\n  const { title, poster_path, overview, vote_average, genres } = movie || {};\n\n  const handleComponentClick = componentName => {\n    if (selectedComponent === componentName) {\n      setSelectedComponent(null);\n    } else {\n      setSelectedComponent(componentName);\n    }\n  };\n\n  return (\n    <div>\n      {loading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      <button onClick={goBack} type=\"button\">\n        Go back\n      </button>\n      {movie && (\n        <>\n          <div className={styles.movieContainer}>\n            <img\n              className={styles.movieImg}\n              src={poster_path ? BASE_URL + poster_path : ''}\n              alt={title}\n            />\n            <div className={styles.descriptionContainer}>\n              <h1>\n                {title} ({movie.release_date.split('-')[0]})\n              </h1>\n              <p>User Score: {Math.round(vote_average * 10)}%</p>\n              <h2>Overview: </h2>\n              <p>{overview}</p>\n              <h2>Genres:</h2>\n              <p>{genres && genres.map(i => i.name).join(', ')}</p>\n            </div>\n          </div>\n          <div>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to=\"#\" onClick={() => handleComponentClick('cast')}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to=\"#\" onClick={() => handleComponentClick('reviews')}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n            {selectedComponent === 'cast' && <Cast />}\n            {selectedComponent === 'reviews' && <Reviews />}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["API_KEY","instance","axios","baseURL","options","method","headers","accept","Authorization","getMoviesDetails","id","get","concat","getMoviesCredits","getMoviesReviews","searchMovies","q","page","arguments","length","undefined","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useParams","useEffect","_fetchCast","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMoviesCredi","data","_context","prev","next","sent","t0","finish","stop","apply","fetchCast","isCast","Boolean","_jsxs","_Fragment","children","_jsx","map","_ref","character","original_name","profile_path","className","styles","src","alt","review","setReview","_fetchReviews","_yield$getMoviesRevie","results","fetchReviews","elements","author","content","isReview","_location$state","movie","setMovie","_useState7","_useState8","selectedComponent","setSelectedComponent","from","useLocation","state","navigate","useNavigate","fetchMoviesDetails","_yield$getMoviesDetai","message","_ref2","title","poster_path","overview","vote_average","genres","handleComponentClick","componentName","onClick","type","release_date","split","Math","round","i","name","join","Link","to","Cast","Reviews"],"sourceRoot":""}